{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Ensemble Optimization for Robust Pulses"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:29.419196Z",
     "start_time": "2020-03-22T05:01:27.400452Z"
    },
    "attributes": {
     "classes": [],
     "id": "",
     "n": "1"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:50.496774Z",
     "iopub.status.busy": "2024-06-03T10:35:50.496597Z",
     "iopub.status.idle": "2024-06-03T10:35:51.021701Z",
     "shell.execute_reply": "2024-06-03T10:35:51.021120Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Python implementation: CPython\n",
      "Python version       : 3.8.16\n",
      "IPython version      : 8.12.3\n",
      "\n",
      "krotov    : 1.3.0\n",
      "numpy     : 1.24.4\n",
      "sys       : 3.8.16 (default, May 26 2024, 19:41:26) \n",
      "[GCC 12.2.0]\n",
      "matplotlib: 3.7.5\n",
      "scipy     : 1.10.1\n",
      "qutip     : 4.7.6\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# NBVAL_IGNORE_OUTPUT\n",
    "%load_ext watermark\n",
    "import sys\n",
    "import os\n",
    "import qutip\n",
    "import numpy as np\n",
    "import scipy\n",
    "import matplotlib\n",
    "import matplotlib.pylab as plt\n",
    "import krotov\n",
    "from qutip import Qobj\n",
    "import pickle\n",
    "\n",
    "%watermark -v --iversions"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "$\\newcommand{tr}[0]{\\operatorname{tr}}\n",
    "\\newcommand{diag}[0]{\\operatorname{diag}}\n",
    "\\newcommand{abs}[0]{\\operatorname{abs}}\n",
    "\\newcommand{pop}[0]{\\operatorname{pop}}\n",
    "\\newcommand{aux}[0]{\\text{aux}}\n",
    "\\newcommand{opt}[0]{\\text{opt}}\n",
    "\\newcommand{tgt}[0]{\\text{tgt}}\n",
    "\\newcommand{init}[0]{\\text{init}}\n",
    "\\newcommand{lab}[0]{\\text{lab}}\n",
    "\\newcommand{rwa}[0]{\\text{rwa}}\n",
    "\\newcommand{bra}[1]{\\langle#1\\vert}\n",
    "\\newcommand{ket}[1]{\\vert#1\\rangle}\n",
    "\\newcommand{Bra}[1]{\\left\\langle#1\\right\\vert}\n",
    "\\newcommand{Ket}[1]{\\left\\vert#1\\right\\rangle}\n",
    "\\newcommand{Braket}[2]{\\left\\langle #1\\vphantom{#2}\\mid{#2}\\vphantom{#1}\\right\\rangle}\n",
    "\\newcommand{ketbra}[2]{\\vert#1\\rangle\\!\\langle#2\\vert}\n",
    "\\newcommand{op}[1]{\\hat{#1}}\n",
    "\\newcommand{Op}[1]{\\hat{#1}}\n",
    "\\newcommand{dd}[0]{\\,\\text{d}}\n",
    "\\newcommand{Liouville}[0]{\\mathcal{L}}\n",
    "\\newcommand{DynMap}[0]{\\mathcal{E}}\n",
    "\\newcommand{identity}[0]{\\mathbf{1}}\n",
    "\\newcommand{Norm}[1]{\\lVert#1\\rVert}\n",
    "\\newcommand{Abs}[1]{\\left\\vert#1\\right\\vert}\n",
    "\\newcommand{avg}[1]{\\langle#1\\rangle}\n",
    "\\newcommand{Avg}[1]{\\left\\langle#1\\right\\rangle}\n",
    "\\newcommand{AbsSq}[1]{\\left\\vert#1\\right\\vert^2}\n",
    "\\newcommand{Re}[0]{\\operatorname{Re}}\n",
    "\\newcommand{Im}[0]{\\operatorname{Im}}\n",
    "\\newcommand{toP}[0]{\\omega_{12}}\n",
    "\\newcommand{toS}[0]{\\omega_{23}}$\n",
    "\n",
    "This example revisits the [Optimization of a State-to-State Transfer in a\n",
    "Lambda System in the RWA](02_example_lambda_system_rwa_complex_pulse.ipynb),\n",
    "attempting to make the control pulses robustness with respect to variations in\n",
    "the pulse amplitude, through \"ensemble optimization\"."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Control objectives for population transfer in the Lambda system\n",
    "\n",
    "As in the original example, we define the Hamiltonian for a Lambda system in\n",
    "the rotating wave approximation, like this:\n",
    "\n",
    "![Lambda system considered in this notebook](energylevels.png)\n",
    "\n",
    "We set up the control fields and the Hamiltonian exactly as before:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:29.441078Z",
     "start_time": "2020-03-22T05:01:29.429149Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:51.048051Z",
     "iopub.status.busy": "2024-06-03T10:35:51.047795Z",
     "iopub.status.idle": "2024-06-03T10:35:51.051930Z",
     "shell.execute_reply": "2024-06-03T10:35:51.051469Z"
    }
   },
   "outputs": [],
   "source": [
    "def Omega_P1(t, args):\n",
    "    \"\"\"Guess for the real part of the pump pulse\"\"\"\n",
    "    Ω0 = 5.0\n",
    "    return Ω0 * krotov.shapes.blackman(t, t_start=2.0, t_stop=5.0)\n",
    "\n",
    "\n",
    "def Omega_P2(t, args):\n",
    "    \"\"\"Guess for the imaginary part of the pump pulse\"\"\"\n",
    "    return 0.0\n",
    "\n",
    "\n",
    "def Omega_S1(t, args):\n",
    "    \"\"\"Guess for the real part of the Stokes pulse\"\"\"\n",
    "    Ω0 = 5.0\n",
    "    return Ω0 * krotov.shapes.blackman(t, t_start=0.0, t_stop=3.0)\n",
    "\n",
    "\n",
    "def Omega_S2(t, args):\n",
    "    \"\"\"Guess for the imaginary part of the Stokes pulse\"\"\"\n",
    "    return 0.0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:29.448554Z",
     "start_time": "2020-03-22T05:01:29.443630Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:51.053786Z",
     "iopub.status.busy": "2024-06-03T10:35:51.053638Z",
     "iopub.status.idle": "2024-06-03T10:35:51.056472Z",
     "shell.execute_reply": "2024-06-03T10:35:51.055951Z"
    }
   },
   "outputs": [],
   "source": [
    "tlist = np.linspace(0, 5, 500)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:29.467163Z",
     "start_time": "2020-03-22T05:01:29.452425Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:51.058349Z",
     "iopub.status.busy": "2024-06-03T10:35:51.058202Z",
     "iopub.status.idle": "2024-06-03T10:35:51.063690Z",
     "shell.execute_reply": "2024-06-03T10:35:51.063274Z"
    }
   },
   "outputs": [],
   "source": [
    "def hamiltonian(E1=0.0, E2=10.0, E3=5.0, omega_P=9.5, omega_S=4.5):\n",
    "    \"\"\"Lambda-system Hamiltonian in the RWA\"\"\"\n",
    "\n",
    "    # detunings\n",
    "    ΔP = E1 + omega_P - E2\n",
    "    ΔS = E3 + omega_S - E2\n",
    "\n",
    "    H0 = Qobj([[ΔP, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, ΔS]])\n",
    "\n",
    "    HP_re = -0.5 * Qobj([[0.0, 1.0, 0.0], [1.0, 0.0, 0.0], [0.0, 0.0, 0.0]])\n",
    "    HP_im = -0.5 * Qobj([[0.0, 1.0j, 0.0], [-1.0j, 0.0, 0.0], [0.0, 0.0, 0.0]])\n",
    "\n",
    "    HS_re = -0.5 * Qobj([[0.0, 0.0, 0.0], [0.0, 0.0, 1.0], [0.0, 1.0, 0.0]])\n",
    "    HS_im = -0.5 * Qobj([[0.0, 0.0, 0.0], [0.0, 0.0, 1.0j], [0.0, -1.0j, 0.0]])\n",
    "\n",
    "    return [\n",
    "        H0,\n",
    "        [HP_re, Omega_P1],\n",
    "        [HP_im, Omega_P2],\n",
    "        [HS_re, Omega_S1],\n",
    "        [HS_im, Omega_S2],\n",
    "    ]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:29.480174Z",
     "start_time": "2020-03-22T05:01:29.470251Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:51.065522Z",
     "iopub.status.busy": "2024-06-03T10:35:51.065372Z",
     "iopub.status.idle": "2024-06-03T10:35:51.069519Z",
     "shell.execute_reply": "2024-06-03T10:35:51.069107Z"
    }
   },
   "outputs": [],
   "source": [
    "H = hamiltonian()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The control objective is the realization of a phase sensitive $\\ket{1}\n",
    "\\rightarrow \\ket{3}$ transition in the lab frame. Thus, in the rotating frame,\n",
    "we must take into account an additional phase factor."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:29.492615Z",
     "start_time": "2020-03-22T05:01:29.482710Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:51.071412Z",
     "iopub.status.busy": "2024-06-03T10:35:51.071263Z",
     "iopub.status.idle": "2024-06-03T10:35:51.074980Z",
     "shell.execute_reply": "2024-06-03T10:35:51.074565Z"
    }
   },
   "outputs": [],
   "source": [
    "ket1 = qutip.Qobj(np.array([1.0, 0.0, 0.0]))\n",
    "ket2 = qutip.Qobj(np.array([0.0, 1.0, 0.0]))\n",
    "ket3 = qutip.Qobj(np.array([0.0, 0.0, 1.0]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:29.502476Z",
     "start_time": "2020-03-22T05:01:29.497857Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:51.076812Z",
     "iopub.status.busy": "2024-06-03T10:35:51.076662Z",
     "iopub.status.idle": "2024-06-03T10:35:51.079240Z",
     "shell.execute_reply": "2024-06-03T10:35:51.078831Z"
    }
   },
   "outputs": [],
   "source": [
    "def rwa_target_state(ket3, E2=10.0, omega_S=4.5, T=5):\n",
    "    return np.exp(1j * (E2 - omega_S) * T) * ket3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:29.511580Z",
     "start_time": "2020-03-22T05:01:29.505632Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:51.081065Z",
     "iopub.status.busy": "2024-06-03T10:35:51.080916Z",
     "iopub.status.idle": "2024-06-03T10:35:51.083439Z",
     "shell.execute_reply": "2024-06-03T10:35:51.083027Z"
    }
   },
   "outputs": [],
   "source": [
    "psi_target = rwa_target_state(ket3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:29.523688Z",
     "start_time": "2020-03-22T05:01:29.514140Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:51.085565Z",
     "iopub.status.busy": "2024-06-03T10:35:51.085190Z",
     "iopub.status.idle": "2024-06-03T10:35:51.090874Z",
     "shell.execute_reply": "2024-06-03T10:35:51.090468Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Objective[|Ψ₀(3)⟩ to |Ψ₁(3)⟩ via [H₀[3,3], [H₁[3,3], u₁(t)], [H₂[3,3], u₂(t)], [H₃[3,3], u₃(t)], [H₄[3,3], u₄(t)]]]]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "objective = krotov.Objective(initial_state=ket1, target=psi_target, H=H)\n",
    "objectives = [objective]\n",
    "objectives"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Robustness to amplitude fluctuations\n",
    "\n",
    "A potential source of error is fluctuations in the pulse amplitude between\n",
    "different runs of the experiment. To account for this, the `hamiltonian`\n",
    "function above include a parameter `mu` that scales the pulse amplitudes by the\n",
    "given factor.\n",
    "\n",
    "We can analyze the result of the [Optimization of a State-to-State Transfer in\n",
    "a Lambda System in the RWA](02_example_lambda_system_rwa_complex_pulse.ipynb)\n",
    "with respect to such fluctuations. We load the earlier optimization result from\n",
    "disk, and verify that the optimized controls produce the $\\ket{1} \\rightarrow\n",
    "\\ket{3}$ transition as desired."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:29.532018Z",
     "start_time": "2020-03-22T05:01:29.525825Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:51.092752Z",
     "iopub.status.busy": "2024-06-03T10:35:51.092600Z",
     "iopub.status.idle": "2024-06-03T10:35:51.095498Z",
     "shell.execute_reply": "2024-06-03T10:35:51.094995Z"
    }
   },
   "outputs": [],
   "source": [
    "opt_result_unperturbed = krotov.result.Result.load(\n",
    "    'lambda_rwa_opt_result.dump', objectives=[objective]\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:29.540217Z",
     "start_time": "2020-03-22T05:01:29.534230Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:51.097329Z",
     "iopub.status.busy": "2024-06-03T10:35:51.097180Z",
     "iopub.status.idle": "2024-06-03T10:35:51.100490Z",
     "shell.execute_reply": "2024-06-03T10:35:51.099969Z"
    }
   },
   "outputs": [],
   "source": [
    "proj1 = qutip.ket2dm(ket1)\n",
    "proj2 = qutip.ket2dm(ket2)\n",
    "proj3 = qutip.ket2dm(ket3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:29.860337Z",
     "start_time": "2020-03-22T05:01:29.542275Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:51.102344Z",
     "iopub.status.busy": "2024-06-03T10:35:51.102195Z",
     "iopub.status.idle": "2024-06-03T10:35:51.138469Z",
     "shell.execute_reply": "2024-06-03T10:35:51.138025Z"
    }
   },
   "outputs": [],
   "source": [
    "opt_unperturbed_dynamics = (\n",
    "    opt_result_unperturbed\n",
    "    .optimized_objectives[0]\n",
    "    .mesolve(tlist, e_ops=[proj1, proj2, proj3])\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:29.874858Z",
     "start_time": "2020-03-22T05:01:29.862369Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:51.140344Z",
     "iopub.status.busy": "2024-06-03T10:35:51.140192Z",
     "iopub.status.idle": "2024-06-03T10:35:51.143619Z",
     "shell.execute_reply": "2024-06-03T10:35:51.143123Z"
    }
   },
   "outputs": [],
   "source": [
    "def plot_population(result):\n",
    "    fig, ax = plt.subplots()\n",
    "    ax.plot(result.times, result.expect[0], label='1')\n",
    "    ax.plot(result.times, result.expect[1], label='2')\n",
    "    ax.plot(result.times, result.expect[2], label='3')\n",
    "    ax.legend()\n",
    "    ax.set_xlabel('time')\n",
    "    ax.set_ylabel('population')\n",
    "    plt.show(fig)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:30.119626Z",
     "start_time": "2020-03-22T05:01:29.879489Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:51.145578Z",
     "iopub.status.busy": "2024-06-03T10:35:51.145303Z",
     "iopub.status.idle": "2024-06-03T10:35:51.297880Z",
     "shell.execute_reply": "2024-06-03T10:35:51.297325Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_population(opt_unperturbed_dynamics)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "lines_to_next_cell": 2
   },
   "source": [
    "Now we can analyze how robust this control is for variations of ±20% of the\n",
    "pulse amplitude. Numerically, this is achieved by scaling the control\n",
    "Hamiltonians with a pre-factor $\\mu$.\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:30.128652Z",
     "start_time": "2020-03-22T05:01:30.122273Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:51.300117Z",
     "iopub.status.busy": "2024-06-03T10:35:51.299935Z",
     "iopub.status.idle": "2024-06-03T10:35:51.303410Z",
     "shell.execute_reply": "2024-06-03T10:35:51.303009Z"
    }
   },
   "outputs": [],
   "source": [
    "def scale_control(H, *, mu):\n",
    "    \"\"\"Scale all control Hamiltonians by `mu`.\"\"\"\n",
    "    H_scaled = []\n",
    "    for spec in H:\n",
    "        if isinstance(spec, list):\n",
    "            H_scaled.append([mu * spec[0], spec[1]])\n",
    "        else:\n",
    "            H_scaled.append(spec)\n",
    "    return H_scaled"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For the analysis, we take the following sample of $\\mu$ values:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:30.138078Z",
     "start_time": "2020-03-22T05:01:30.131210Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:51.305356Z",
     "iopub.status.busy": "2024-06-03T10:35:51.305181Z",
     "iopub.status.idle": "2024-06-03T10:35:51.307897Z",
     "shell.execute_reply": "2024-06-03T10:35:51.307440Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "mu_vals = np.linspace(0.75, 1.25, 33)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "lines_to_next_cell": 2
   },
   "source": [
    "We measure the success of the transfer via the \"population error\", i.e., the\n",
    "deviation from 1.0 of the population in state $\\ket{3}$ at final time $T$.\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:30.153375Z",
     "start_time": "2020-03-22T05:01:30.144877Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:51.309838Z",
     "iopub.status.busy": "2024-06-03T10:35:51.309663Z",
     "iopub.status.idle": "2024-06-03T10:35:51.312620Z",
     "shell.execute_reply": "2024-06-03T10:35:51.312127Z"
    }
   },
   "outputs": [],
   "source": [
    "def pop_error(obj, mu):\n",
    "    res = obj.mesolve(tlist, H=scale_control(obj.H, mu=mu), e_ops=[proj3])\n",
    "    return 1 - res.expect[0][-1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:40.680753Z",
     "start_time": "2020-03-22T05:01:30.156668Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:51.314469Z",
     "iopub.status.busy": "2024-06-03T10:35:51.314295Z",
     "iopub.status.idle": "2024-06-03T10:35:52.298480Z",
     "shell.execute_reply": "2024-06-03T10:35:52.297878Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "def _f(mu):\n",
    "    return pop_error(opt_result_unperturbed.optimized_objectives[0], mu=mu)\n",
    "\n",
    "\n",
    "pop_errors_norobust = [_f(mu) for mu in mu_vals]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:40.693446Z",
     "start_time": "2020-03-22T05:01:40.684478Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:52.300925Z",
     "iopub.status.busy": "2024-06-03T10:35:52.300744Z",
     "iopub.status.idle": "2024-06-03T10:35:52.305295Z",
     "shell.execute_reply": "2024-06-03T10:35:52.304889Z"
    }
   },
   "outputs": [],
   "source": [
    "def plot_robustness(mu_vals, pop_errors, pop_errors0=None):\n",
    "    fig, ax = plt.subplots()\n",
    "    ax.plot(mu_vals, pop_errors, label='1')\n",
    "    if pop_errors0 is not None:\n",
    "        ax.set_prop_cycle(None)  # reset colors\n",
    "        if isinstance(pop_errors0, list):\n",
    "            for (i, pop_errors_prev) in enumerate(pop_errors0):\n",
    "                ax.plot(\n",
    "                    mu_vals, pop_errors_prev, ls='dotted', label=(\"%d\" % (-i))\n",
    "                )\n",
    "        else:\n",
    "            ax.plot(mu_vals, pop_errors0, ls='dotted', label='0')\n",
    "    ax.set_xlabel(\"relative coupling strength\")\n",
    "    ax.set_ylabel(r\"$1 - \\vert \\langle \\Psi \\vert 3 \\rangle \\vert^2$\")\n",
    "    ax.axvspan(0.9, 1.1, alpha=0.25, color='red')\n",
    "    ax.set_yscale('log')\n",
    "    if pop_errors0 is not None:\n",
    "        ax.legend()\n",
    "    plt.show(fig)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:41.453727Z",
     "start_time": "2020-03-22T05:01:40.696343Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:52.307166Z",
     "iopub.status.busy": "2024-06-03T10:35:52.306993Z",
     "iopub.status.idle": "2024-06-03T10:35:53.004439Z",
     "shell.execute_reply": "2024-06-03T10:35:53.003888Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:matplotlib.font_manager:findfont: Font family ['cmtt10'] not found. Falling back to DejaVu Sans.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:matplotlib.font_manager:findfont: Font family ['cmb10'] not found. Falling back to DejaVu Sans.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:matplotlib.font_manager:findfont: Font family ['cmss10'] not found. Falling back to DejaVu Sans.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:matplotlib.font_manager:findfont: Font family ['DejaVu Sans Display'] not found. Falling back to DejaVu Sans.\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_robustness(mu_vals, pop_errors_norobust)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The plot shows that as the pulse amplitude deviates from the optimal value, the\n",
    "error rises quickly: our previous optimization result is not robust.\n",
    "\n",
    "The highlighted region of ±10% is our \"region of interest\" within\n",
    "which we would like the control to be robust by applying optimal control."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Setting the ensemble objectives"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "They central idea of optimizing for robustness is to take multiple copies of\n",
    "the Hamiltonian, sampling over the space of variations to which would\n",
    "like to be robust, and optimize over the average of this ensemble.\n",
    "\n",
    "Here, we sample 5 values of $\\mu$ (including the unperturbed $\\mu=1$) in the\n",
    "region of interest, $\\mu \\in [0.9, 1.1]$."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:41.462459Z",
     "start_time": "2020-03-22T05:01:41.456749Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:53.006801Z",
     "iopub.status.busy": "2024-06-03T10:35:53.006612Z",
     "iopub.status.idle": "2024-06-03T10:35:53.009449Z",
     "shell.execute_reply": "2024-06-03T10:35:53.008942Z"
    }
   },
   "outputs": [],
   "source": [
    "ensemble_mu = [0.9, 0.95, 1.0, 1.05, 1.1]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The corresponding Hamiltonians are"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:41.487262Z",
     "start_time": "2020-03-22T05:01:41.474312Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:53.011672Z",
     "iopub.status.busy": "2024-06-03T10:35:53.011362Z",
     "iopub.status.idle": "2024-06-03T10:35:53.015977Z",
     "shell.execute_reply": "2024-06-03T10:35:53.015507Z"
    }
   },
   "outputs": [],
   "source": [
    "ham_ensemble = [scale_control(objective.H, mu=mu) for mu in ensemble_mu]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The `krotov.objectives.ensemble_objectives` extends the original objective of a\n",
    "single unperturbed state-to-state transition with one additional objective for\n",
    "each ensemble Hamiltonian for $\\mu \\neq 1$:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:41.504002Z",
     "start_time": "2020-03-22T05:01:41.492908Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:53.017910Z",
     "iopub.status.busy": "2024-06-03T10:35:53.017759Z",
     "iopub.status.idle": "2024-06-03T10:35:53.022102Z",
     "shell.execute_reply": "2024-06-03T10:35:53.021715Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Objective[|Ψ₀(3)⟩ to |Ψ₁(3)⟩ via [H₀[3,3], [H₅[3,3], u₁(t)], [H₆[3,3], u₂(t)], [H₇[3,3], u₃(t)], [H₈[3,3], u₄(t)]]],\n",
       " Objective[|Ψ₀(3)⟩ to |Ψ₁(3)⟩ via [H₀[3,3], [H₉[3,3], u₁(t)], [H₁₀[3,3], u₂(t)], [H₁₁[3,3], u₃(t)], [H₁₂[3,3], u₄(t)]]],\n",
       " Objective[|Ψ₀(3)⟩ to |Ψ₁(3)⟩ via [H₀[3,3], [H₁₃[3,3], u₁(t)], [H₁₄[3,3], u₂(t)], [H₁₅[3,3], u₃(t)], [H₁₆[3,3], u₄(t)]]],\n",
       " Objective[|Ψ₀(3)⟩ to |Ψ₁(3)⟩ via [H₀[3,3], [H₁₇[3,3], u₁(t)], [H₁₈[3,3], u₂(t)], [H₁₉[3,3], u₃(t)], [H₂₀[3,3], u₄(t)]]],\n",
       " Objective[|Ψ₀(3)⟩ to |Ψ₁(3)⟩ via [H₀[3,3], [H₂₁[3,3], u₁(t)], [H₂₂[3,3], u₂(t)], [H₂₃[3,3], u₃(t)], [H₂₄[3,3], u₄(t)]]]]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ensemble_objectives = krotov.objectives.ensemble_objectives(\n",
    "    objectives, ham_ensemble, keep_original_objectives=False,\n",
    ")\n",
    "ensemble_objectives"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It is important that all five objectives reference the same four control\n",
    "pulses, as is the case here."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Optimize"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We use the same update shape $S(t)$ and $\\lambda_a$ value as in the original optimization:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:41.515808Z",
     "start_time": "2020-03-22T05:01:41.506536Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:53.024240Z",
     "iopub.status.busy": "2024-06-03T10:35:53.024021Z",
     "iopub.status.idle": "2024-06-03T10:35:53.027633Z",
     "shell.execute_reply": "2024-06-03T10:35:53.027129Z"
    }
   },
   "outputs": [],
   "source": [
    "def S(t):\n",
    "    \"\"\"Scales the Krotov methods update of the pulse value at the time t\"\"\"\n",
    "    return krotov.shapes.flattop(t, 0.0, 5, 0.3, func='sinsq')\n",
    "\n",
    "\n",
    "λ = 0.5\n",
    "\n",
    "pulse_options = {\n",
    "    H[1][1]: dict(lambda_a=λ, update_shape=S),\n",
    "    H[2][1]: dict(lambda_a=λ, update_shape=S),\n",
    "    H[3][1]: dict(lambda_a=λ, update_shape=S),\n",
    "    H[4][1]: dict(lambda_a=λ, update_shape=S),\n",
    "}"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "lines_to_next_cell": 2
   },
   "source": [
    "It will be interesting to see how the optimization progresses for each\n",
    "individual element of the ensemble. Thus, we write an `info_hook` routine that\n",
    "prints out a tabular overview of $1 - \\Re\\Braket{\\Psi(T)}{3}_{\\Op{H}_i}$ for\n",
    "all $\\Op{H}_i$ in the ensemble, as well as their average (the total functional\n",
    "$J_T$ that is being minimized)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:41.526072Z",
     "start_time": "2020-03-22T05:01:41.518139Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:53.029577Z",
     "iopub.status.busy": "2024-06-03T10:35:53.029430Z",
     "iopub.status.idle": "2024-06-03T10:35:53.033214Z",
     "shell.execute_reply": "2024-06-03T10:35:53.032725Z"
    }
   },
   "outputs": [],
   "source": [
    "def print_J_T_per_target(**kwargs):\n",
    "    iteration = kwargs['iteration']\n",
    "    N = len(ensemble_mu)\n",
    "    if iteration == 0:\n",
    "        print(\n",
    "            \"iteration \"\n",
    "            + \"%11s \" % \"J_T(avg)\"\n",
    "            + \" \".join([(\"J_T(μ=%.2f)\" % μ) for μ in ensemble_mu])\n",
    "        )\n",
    "    J_T_vals = 1 - kwargs['tau_vals'].real\n",
    "    J_T = np.sum(J_T_vals) / N\n",
    "    print(\n",
    "        (\"%9d \" % iteration)\n",
    "        + (\"%11.2e \" % J_T)\n",
    "        + \" \".join([(\"%11.2e\" % v) for v in J_T_vals])\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We'll also want to look at the output of ``krotov.info_hooks.print_table``, but\n",
    "in order to keep the output orderly, we will write that information to a file\n",
    "`ensemble_opt.log`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:01:41.534779Z",
     "start_time": "2020-03-22T05:01:41.528504Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:53.035095Z",
     "iopub.status.busy": "2024-06-03T10:35:53.034948Z",
     "iopub.status.idle": "2024-06-03T10:35:53.038293Z",
     "shell.execute_reply": "2024-06-03T10:35:53.037801Z"
    }
   },
   "outputs": [],
   "source": [
    "log_fh = open(\"ensemble_opt.log\", \"w\", encoding=\"utf-8\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The optimization starts for the same guess pulses as the original [Optimization\n",
    "of a State-to-State Transfer in a Lambda System in the\n",
    "RWA](02_example_lambda_system_rwa_complex_pulse.ipynb). Generally, for a\n",
    "robustness ensemble optimization, this will yield better results than trying to\n",
    "take the optimized pulses for the unperturbed system as a guess.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:06:03.283073Z",
     "start_time": "2020-03-22T05:01:41.538943Z"
    },
    "attributes": {
     "classes": [],
     "id": "",
     "n": "16"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:35:53.040255Z",
     "iopub.status.busy": "2024-06-03T10:35:53.040108Z",
     "iopub.status.idle": "2024-06-03T10:38:23.963747Z",
     "shell.execute_reply": "2024-06-03T10:38:23.963225Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "iteration    J_T(avg) J_T(μ=0.90) J_T(μ=0.95) J_T(μ=1.00) J_T(μ=1.05) J_T(μ=1.10)\n",
      "        0    1.01e+00    1.01e+00    1.01e+00    1.01e+00    1.01e+00    1.01e+00\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        1    6.79e-01    6.94e-01    6.83e-01    6.75e-01    6.71e-01    6.71e-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        2    4.14e-01    4.40e-01    4.20e-01    4.07e-01    4.00e-01    4.00e-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        3    2.36e-01    2.68e-01    2.43e-01    2.27e-01    2.20e-01    2.23e-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        4    1.32e-01    1.63e-01    1.37e-01    1.21e-01    1.16e-01    1.22e-01\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        5    7.46e-02    1.04e-01    7.78e-02    6.29e-02    5.98e-02    6.86e-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        6    4.46e-02    7.13e-02    4.58e-02    3.23e-02    3.12e-02    4.26e-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        7    2.92e-02    5.32e-02    2.88e-02    1.66e-02    1.72e-02    3.04e-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        8    2.14e-02    4.32e-02    1.96e-02    8.59e-03    1.04e-02    2.50e-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        9    1.73e-02    3.74e-02    1.46e-02    4.48e-03    7.25e-03    2.28e-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       10    1.52e-02    3.41e-02    1.19e-02    2.37e-03    5.83e-03    2.21e-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       11    1.42e-02    3.20e-02    1.03e-02    1.29e-03    5.23e-03    2.20e-02\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       12    1.36e-02    3.07e-02    9.36e-03    7.19e-04    5.00e-03    2.20e-02\n"
     ]
    }
   ],
   "source": [
    "opt_result = krotov.optimize_pulses(\n",
    "    ensemble_objectives,\n",
    "    pulse_options,\n",
    "    tlist,\n",
    "    propagator=krotov.propagators.expm,\n",
    "    chi_constructor=krotov.functionals.chis_re,\n",
    "    info_hook=krotov.info_hooks.chain(\n",
    "        print_J_T_per_target,\n",
    "        krotov.info_hooks.print_table(\n",
    "            J_T=krotov.functionals.J_T_re, out=log_fh\n",
    "        ),\n",
    "    ),\n",
    "    check_convergence=krotov.convergence.Or(\n",
    "        krotov.convergence.value_below(1e-3, name='J_T'),\n",
    "        krotov.convergence.check_monotonic_error,\n",
    "    ),\n",
    "    iter_stop=12,\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "After twelve iterations (which were sufficient to produce an error $<10^{-3}$\n",
    "in the original optimization), we find the average error over the ensemble to\n",
    "be still above $>10^{-2}$. However, the error for $\\mu = 1$ is only *slightly*\n",
    "larger than in the original optimization; the lack of success is entirely due\n",
    "to the large error for the other elements of the ensemble for $\\mu \\neq 1$.\n",
    "Achieving robustness is hard!\n",
    "\n",
    "We continue the optimization until the *average* error falls below $10^{-3}$:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:06:03.339376Z",
     "start_time": "2020-03-22T05:06:03.287117Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:38:23.965960Z",
     "iopub.status.busy": "2024-06-03T10:38:23.965774Z",
     "iopub.status.idle": "2024-06-03T10:38:23.973424Z",
     "shell.execute_reply": "2024-06-03T10:38:23.972921Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "iteration    J_T(avg) J_T(μ=0.90) J_T(μ=0.95) J_T(μ=1.00) J_T(μ=1.05) J_T(μ=1.10)\n",
      "        0    1.36e-02    3.07e-02    9.36e-03    7.19e-04    5.00e-03    2.20e-02\n",
      "      ...\n",
      "      670    1.05e-03    2.80e-03    4.83e-04    1.10e-04    5.22e-04    1.34e-03\n",
      "      671    1.05e-03    2.78e-03    4.79e-04    1.10e-04    5.19e-04    1.33e-03\n",
      "      672    1.04e-03    2.77e-03    4.76e-04    1.10e-04    5.16e-04    1.33e-03\n",
      "      673    1.03e-03    2.75e-03    4.73e-04    1.11e-04    5.14e-04    1.32e-03\n",
      "      674    1.03e-03    2.74e-03    4.70e-04    1.11e-04    5.11e-04    1.31e-03\n",
      "      675    1.02e-03    2.72e-03    4.66e-04    1.11e-04    5.08e-04    1.30e-03\n",
      "      676    1.02e-03    2.71e-03    4.63e-04    1.12e-04    5.05e-04    1.29e-03\n",
      "      677    1.01e-03    2.69e-03    4.60e-04    1.12e-04    5.03e-04    1.28e-03\n",
      "      678    1.00e-03    2.68e-03    4.57e-04    1.12e-04    5.00e-04    1.27e-03\n",
      "      679    9.99e-04    2.66e-03    4.54e-04    1.13e-04    4.97e-04    1.26e-03\n"
     ]
    }
   ],
   "source": [
    "dumpfile = \"./ensemble_opt_result.dump\"\n",
    "if os.path.isfile(dumpfile):\n",
    "    opt_result = krotov.result.Result.load(dumpfile, objectives)\n",
    "    print_J_T_per_target(iteration=0, tau_vals=opt_result.tau_vals[12])\n",
    "    print(\"      ...\")\n",
    "    n_iters = len(opt_result.tau_vals)\n",
    "    for i in range(n_iters - 10, n_iters):\n",
    "        print_J_T_per_target(iteration=i, tau_vals=opt_result.tau_vals[i])\n",
    "else:\n",
    "    opt_result = krotov.optimize_pulses(\n",
    "        ensemble_objectives,\n",
    "        pulse_options,\n",
    "        tlist,\n",
    "        propagator=krotov.propagators.expm,\n",
    "        chi_constructor=krotov.functionals.chis_re,\n",
    "        info_hook=krotov.info_hooks.chain(\n",
    "            print_J_T_per_target,\n",
    "            krotov.info_hooks.print_table(\n",
    "                J_T=krotov.functionals.J_T_re, out=log_fh\n",
    "            ),\n",
    "        ),\n",
    "        check_convergence=krotov.convergence.Or(\n",
    "            krotov.convergence.value_below(1e-3, name='J_T'),\n",
    "            krotov.convergence.check_monotonic_error,\n",
    "        ),\n",
    "        iter_stop=1000,\n",
    "        continue_from=opt_result,\n",
    "    )\n",
    "    opt_result.dump(dumpfile)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:06:03.357680Z",
     "start_time": "2020-03-22T05:06:03.349278Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:38:23.975332Z",
     "iopub.status.busy": "2024-06-03T10:38:23.975156Z",
     "iopub.status.idle": "2024-06-03T10:38:23.979223Z",
     "shell.execute_reply": "2024-06-03T10:38:23.978634Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Krotov Optimization Result\n",
       "--------------------------\n",
       "- Started at 2024-06-01 16:02:53\n",
       "- Number of objectives: 1\n",
       "- Number of iterations: 679\n",
       "- Reason for termination: Reached convergence: J_T < 0.001\n",
       "- Ended at 2024-06-01 18:17:38 (2:14:45)"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "opt_result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:06:03.366547Z",
     "start_time": "2020-03-22T05:06:03.360976Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:38:23.981072Z",
     "iopub.status.busy": "2024-06-03T10:38:23.980922Z",
     "iopub.status.idle": "2024-06-03T10:38:23.984264Z",
     "shell.execute_reply": "2024-06-03T10:38:23.983734Z"
    }
   },
   "outputs": [],
   "source": [
    "log_fh.close()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Even now, the ideal Hamiltonian ($\\mu = 1$) has the lowest error in the\n",
    "ensemble by a significant margin. However, notice that the error in the $J_T$\n",
    "for $\\mu = 1$ is actually rising, while the errors for values of $\\mu \\neq 1$\n",
    "are falling by a much larger value! This is a good thing: we sacrifice a little\n",
    "bit of fidelity in the unperturbed dynamics to an increase in robustness.\n",
    "\n",
    "The optimized \"robust\" pulse looks as follows:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:06:04.274992Z",
     "start_time": "2020-03-22T05:06:03.369715Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:38:23.986158Z",
     "iopub.status.busy": "2024-06-03T10:38:23.986009Z",
     "iopub.status.idle": "2024-06-03T10:38:24.316731Z",
     "shell.execute_reply": "2024-06-03T10:38:24.316154Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "pump pulse amplitude and phase:\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Stokes pulse amplitude and phase:\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def plot_pulse_amplitude_and_phase(pulse_real, pulse_imaginary, tlist):\n",
    "    ax1 = plt.subplot(211)\n",
    "    ax2 = plt.subplot(212)\n",
    "    amplitudes = [\n",
    "        np.sqrt(x * x + y * y) for x, y in zip(pulse_real, pulse_imaginary)\n",
    "    ]\n",
    "    phases = [\n",
    "        np.arctan2(y, x) / np.pi for x, y in zip(pulse_real, pulse_imaginary)\n",
    "    ]\n",
    "    ax1.plot(tlist, amplitudes)\n",
    "    ax1.set_xlabel('time')\n",
    "    ax1.set_ylabel('pulse amplitude')\n",
    "    ax2.plot(tlist, phases)\n",
    "    ax2.set_xlabel('time')\n",
    "    ax2.set_ylabel('pulse phase (π)')\n",
    "    plt.show()\n",
    "\n",
    "\n",
    "print(\"pump pulse amplitude and phase:\")\n",
    "plot_pulse_amplitude_and_phase(\n",
    "    opt_result.optimized_controls[0], opt_result.optimized_controls[1], tlist\n",
    ")\n",
    "print(\"Stokes pulse amplitude and phase:\")\n",
    "plot_pulse_amplitude_and_phase(\n",
    "    opt_result.optimized_controls[2], opt_result.optimized_controls[3], tlist\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "and produces the dynamics (in the unperturbed system) shown below:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:06:04.614894Z",
     "start_time": "2020-03-22T05:06:04.277559Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:38:24.318698Z",
     "iopub.status.busy": "2024-06-03T10:38:24.318537Z",
     "iopub.status.idle": "2024-06-03T10:38:24.353835Z",
     "shell.execute_reply": "2024-06-03T10:38:24.353316Z"
    }
   },
   "outputs": [],
   "source": [
    "opt_robust_dynamics = opt_result.optimized_objectives[0].mesolve(\n",
    "    tlist, e_ops=[proj1, proj2, proj3]\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:06:04.825054Z",
     "start_time": "2020-03-22T05:06:04.616827Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:38:24.355730Z",
     "iopub.status.busy": "2024-06-03T10:38:24.355576Z",
     "iopub.status.idle": "2024-06-03T10:38:24.472245Z",
     "shell.execute_reply": "2024-06-03T10:38:24.471702Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_population(opt_robust_dynamics)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Robustness analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "When comparing the robustness of the \"robust\" optimized pulse to that obtained\n",
    "from the original optimization for the unperturbed Hamiltonian, we should make\n",
    "sure that we have converged to a comparable error: We would like to avoid the\n",
    "suspicion that the ensemble error is below our threshold only because the error\n",
    "for $\\mu = 1$ is so much lower. Therefore, we continue the original unperturbed\n",
    "optimization for a few more iterations, until we reach the same error $\\approx\n",
    "1.13 \\times 10^{-4}$ that we found as the result of the ensemble optimization,\n",
    "looking at $\\mu=1$ only:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:06:04.832756Z",
     "start_time": "2020-03-22T05:06:04.827766Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:38:24.474223Z",
     "iopub.status.busy": "2024-06-03T10:38:24.474067Z",
     "iopub.status.idle": "2024-06-03T10:38:24.477318Z",
     "shell.execute_reply": "2024-06-03T10:38:24.476861Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "J_T(μ=1) = 2.66e-03\n"
     ]
    }
   ],
   "source": [
    "print(\"J_T(μ=1) = %.2e\" % (1 - opt_result.tau_vals[-1][0].real))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:06:16.589810Z",
     "start_time": "2020-03-22T05:06:04.834702Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:38:24.479202Z",
     "iopub.status.busy": "2024-06-03T10:38:24.478995Z",
     "iopub.status.idle": "2024-06-03T10:38:32.900613Z",
     "shell.execute_reply": "2024-06-03T10:38:32.899972Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "iter.      J_T  ∫gₐ(ϵ₁)dt  ∫gₐ(ϵ₂)dt  ∫gₐ(ϵ₃)dt  ∫gₐ(ϵ₄)dt   ∑∫gₐ(t)dt          J       ΔJ_T         ΔJ  secs\n",
      "0     5.90e-04   0.00e+00   0.00e+00   0.00e+00   0.00e+00    0.00e+00   5.90e-04        n/a        n/a     1\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "13    3.24e-04   6.29e-05   9.90e-06   5.10e-05   9.21e-06    1.33e-04   4.57e-04  -2.66e-04  -1.33e-04     2\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "14    1.83e-04   3.16e-05   7.05e-06   2.56e-05   6.48e-06    7.08e-05   2.53e-04  -1.42e-04  -7.08e-05     2\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "15    1.06e-04   1.60e-05   5.02e-06   1.29e-05   4.56e-06    3.85e-05   1.44e-04  -7.70e-05  -3.85e-05     2\n"
     ]
    }
   ],
   "source": [
    "opt_result_unperturbed_cont = krotov.optimize_pulses(\n",
    "    [objective],\n",
    "    pulse_options,\n",
    "    tlist,\n",
    "    propagator=krotov.propagators.expm,\n",
    "    chi_constructor=krotov.functionals.chis_re,\n",
    "    info_hook=krotov.info_hooks.print_table(\n",
    "        J_T=krotov.functionals.J_T_re,\n",
    "        show_g_a_int_per_pulse=True,\n",
    "    ),\n",
    "    check_convergence=krotov.convergence.Or(\n",
    "        krotov.convergence.value_below(1.13e-4, name='J_T'),\n",
    "        krotov.convergence.check_monotonic_error,\n",
    "    ),\n",
    "    iter_stop=50,\n",
    "    continue_from=opt_result_unperturbed,\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, we can compare the robustness of the optimized pulses from the original\n",
    "unperturbed optimization (label \"-1\"), the continued unperturbed optimization\n",
    "(label \"0\"), and the ensemble optimization (label \"1\"):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:06:25.330316Z",
     "start_time": "2020-03-22T05:06:16.592668Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:38:32.903152Z",
     "iopub.status.busy": "2024-06-03T10:38:32.902952Z",
     "iopub.status.idle": "2024-06-03T10:38:33.885938Z",
     "shell.execute_reply": "2024-06-03T10:38:33.885370Z"
    }
   },
   "outputs": [],
   "source": [
    "def _f(mu):\n",
    "    return pop_error(\n",
    "        opt_result_unperturbed_cont.optimized_objectives[0], mu=mu\n",
    "    )\n",
    "\n",
    "\n",
    "pop_errors_norobust_cont = [_f(mu) for mu in mu_vals]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:06:34.908457Z",
     "start_time": "2020-03-22T05:06:25.332449Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:38:33.888096Z",
     "iopub.status.busy": "2024-06-03T10:38:33.887938Z",
     "iopub.status.idle": "2024-06-03T10:38:34.894530Z",
     "shell.execute_reply": "2024-06-03T10:38:34.893871Z"
    }
   },
   "outputs": [],
   "source": [
    "def _f(mu):\n",
    "    return pop_error(opt_result.optimized_objectives[0], mu=mu)\n",
    "\n",
    "\n",
    "pop_errors_robust = [_f(mu) for mu in mu_vals]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-22T05:06:35.372866Z",
     "start_time": "2020-03-22T05:06:34.911667Z"
    },
    "execution": {
     "iopub.execute_input": "2024-06-03T10:38:34.896840Z",
     "iopub.status.busy": "2024-06-03T10:38:34.896653Z",
     "iopub.status.idle": "2024-06-03T10:38:35.177508Z",
     "shell.execute_reply": "2024-06-03T10:38:35.177098Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_robustness(\n",
    "    mu_vals,\n",
    "    pop_errors_robust,\n",
    "    pop_errors0=[pop_errors_norobust_cont, pop_errors_norobust],\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We see that without the ensemble optimization, we only lower the error for\n",
    "exactly $\\mu = 1$: the more we converge, the less robust the result. In\n",
    "contrast, the ensemble optimization results in considerably lower errors (order\n",
    "of magnitude!) throughout the highlighted \"region of interest\" and beyond."
   ]
  }
 ],
 "metadata": {
  "hide_input": false,
  "jupytext": {
   "formats": ""
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.16"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
